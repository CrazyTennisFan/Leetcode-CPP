387. First Unique Character in a String

Given a string, find the first non-repeating character in it and return its index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode"
return 2.
 

Note: You may assume the string contains only lowercase English letters.

class Solution {
public:
    int firstUniqChar(string s) {
        if(s.size() == 0){
            return -1;
        }
        
        map<char, int> m;
        for(auto c: s){
            if(m.find(c) != end(m)){
                m[c]++;
            }
            else{
                m[c] = 1;
            }
        }
        
        for(auto i = 0; i < s.size(); ++i){
            if(m[s[i]] == 1){
                return i;
            }
        }
        
        return -1;
    }
};