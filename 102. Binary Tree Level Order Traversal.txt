102. Binary Tree Level Order Traversal

Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its level order traversal as:
[
  [3],
  [9,20],
  [15,7]
]

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(root == nullptr){
            return res;
        }
        
        queue<TreeNode*> que;
        que.push(root);
        
        while(que.size() != 0){
            vector<int> v;
            int size = que.size();
            for(int i = 0; i < size; i++){
                TreeNode* n = que.front();
                if(n->left != nullptr){
                    que.push(n->left);
                }
                if(n->right != nullptr){
                    que.push(n->right);
                }
                v.push_back(n->val);
                que.pop();
            }
            res.push_back(v);
        }
        
        return res;
    }
};