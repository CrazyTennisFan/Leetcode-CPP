533. Two Sum - Closest to target

Description
Given an array nums of n integers, find two integers in nums such that the sum is closest to a given number, target.

Return the absolute value of difference between the sum of the two integers and the target.

Example
Example1

Input:  nums = [-1, 2, 1, -4] and target = 4
Output: 1
Explanation:
The minimum difference is 1. (4 - (2 + 1) = 1).
Example2

Input:  nums = [-1, -1, -1, -4] and target = 4
Output: 6
Explanation:
The minimum difference is 6. (4 - (- 1 - 1) = 6).
Challenge
Do it in O(nlogn) time complexity.

class Solution {
public:
    /**
     * @param nums: an integer array
     * @param target: An integer
     * @return: the difference between the sum and the target
     */
    int twoSumClosest(vector<int> &nums, int target) {
        // write your code here
        sort(begin(nums), end(nums));
        int l = 0;
        int r = nums.size()-1;
        
        int diff = INT_MAX;
        
        
        while(l < r){
            if(nums[l] + nums[r] == target){
                return 0;
            }
            else if(nums[l] + nums[r] < target){
                if(abs(target-nums[l] - nums[r]) < diff){
                    diff = abs(target-nums[l] - nums[r]);
                }
                ++l;
            }
            else{
                if(abs(target-nums[l] - nums[r]) < diff){
                    diff = abs(target-nums[l] - nums[r]);
                }
                --r;
            }
        }
        
        return diff;
        
        
    }
};