144. Interleaving Positive and Negative Numbers

Description
Given an array with positive and negative integers. Re-range it to interleaving with positive and negative integers.

Example
Example 1

Input : [-1, -2, -3, 4, 5, 6]
Outout : [-1, 5, -2, 4, -3, 6]
Explanation :  any other reasonable answer.
Challenge
Do it in-place and without extra memory.

class Solution {
public:
    /*
     * @param A: An integer array.
     * @return: nothing
     */
    void rerange(vector<int> &A) {
        // write your code here
        if(A.size() < 2){
            return;
        }
        
        int pivot = partition(A);
        int numNegative = pivot + 1;
        int numPositive = A.size() - pivot - 1;
         
        if (numNegative == numPositive - 1) {
            interleave(A, 0, A.size() - 2);
        } else if (numNegative == numPositive + 1 ) {
            interleave(A, 1, A.size() - 1);
        } else {
            interleave(A, 0, A.size() - 1);
        }
    }
    
    void interleave(vector<int> &A, int start, int end) {
        while (start < end) {
            int temp = A[start];
            A[start] = A[end];
            A[end] = temp;
            start += 2;
            end -= 2;
        }
    }
    
    int partition(vector<int> &A) {
        int start = 0;
        int end = A.size() - 1;
         
        while (start <= end) {
            while (start <= end && A[start] < 0) {
                start++;
            }
             
            while (start <= end && A[end] >= 0) {
                end--;
            }
             
            if (start <= end) {
                int temp = A[start];
                A[start] = A[end];
                A[end] = temp;
                start++;
                end--;
            }
        }
         
        return end;
    }
    
    
};