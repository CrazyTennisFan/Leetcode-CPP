144. Binary Tree Preorder Traversal

Example
Example 1:

Input：{1,2,3}
Output：[1,2,3]
Explanation:
   1
  / \
 2   3
it will be serialized {1,2,3}
Preorder traversal
Example 2:

Input：{1,#,2,3}
Output：[1,2,3]
Explanation:
1
 \
  2
 /
3
it will be serialized {1,#,2,3}
Preorder traversal

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        
        vector<int> res;
        if(root == nullptr){
            return res;
        }
        
        stack<TreeNode*> s;
        s.push(root);
        
        while(s.size() != 0){
            TreeNode* cur_node = s.top();
            s.pop();
            
            res.push_back(cur_node->val);
            
            if(cur_node->right != nullptr){
                s.push(cur_node->right);
            }
            
            if(cur_node->left != nullptr){
                s.push(cur_node->left);
            }
            
        }
        
        return res;
    }
};