611. Valid Triangle Number

Given an array consists of non-negative integers, your task is to count the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.
Example 1:
Input: [2,2,3,4]
Output: 3
Explanation:
Valid combinations are: 
2,3,4 (using the first 2)
2,3,4 (using the second 2)
2,2,3
Note:
The length of the given array won't exceed 1000.
The integers in the given array are in the range of [0, 1000].

class Solution {
public:
    int triangleNumber(vector<int>& nums) {
        if(nums.size() < 3){
            return 0;
        }
        
        sort(begin(nums), end(nums));
        
        int res = 0;
        for(auto i = 0; i+2 < nums.size(); i++){
            for(auto j = i+1; j+1 < nums.size(); j++){
                auto r = nums.size()-1;
                auto l = j;
                while(l < r){
                    if(nums[i] + nums[l] > nums[r]){
                        res += r - l;
                        break;
                    }
                    else{
                        --r;
                    }
                }
            }
        }
        
        return res;
    }
};